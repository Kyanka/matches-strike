[{"C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\index.js":"1","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\App.js":"2","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\reportWebVitals.js":"3","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\redux\\state.js":"4","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\MatchGame.jsx":"5","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\InitGame.jsx":"6","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\LinkButton.jsx":"7","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\Victory.jsx":"8"},{"size":847,"mtime":1623063500921,"results":"9","hashOfConfig":"10"},{"size":840,"mtime":1623098113802,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":8138,"mtime":1623158332271,"results":"13","hashOfConfig":"10"},{"size":2408,"mtime":1623180968398,"results":"14","hashOfConfig":"10"},{"size":1718,"mtime":1623087292262,"results":"15","hashOfConfig":"10"},{"size":761,"mtime":1623181216108,"results":"16","hashOfConfig":"10"},{"size":1132,"mtime":1623103752420,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pcbvpc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\index.js",[],["39","40"],"C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\App.js",[],"C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\reportWebVitals.js",[],"C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\redux\\state.js",["41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"const TAKE_M = \"TAKE_M\";\r\nconst CHANGE_M = \"CHANGE_M\";\r\nconst INIT_GAME = \"INIT_GAME\";\r\nconst INIT_N = \"INIT_N\";\r\nconst INIT_M = \"INIT_M\";\r\nconst SET_FPLAYER = \"SET_FPLAYER\";\r\nconst RESET = \"RESET\";\r\nconst RESTART = \"RESTART\";\r\nconst REBUILD = \"REBUILD\";\r\nexport const AC = {\r\n    changeMAC(m) {\r\n        return ({type: CHANGE_M, newM: m})\r\n    },\r\n    takeMAC() {\r\n        return ({type: TAKE_M})\r\n    },\r\n    setInitNAC(n) {\r\n        return ({type: INIT_N, n: n})\r\n    },\r\n    setInitMAC(m) {\r\n        return ({type: INIT_M, m})\r\n    },\r\n    setFPlayer(fPlayer) {\r\n        return ({type: SET_FPLAYER, fPlayer})\r\n    },\r\n    reset(n, m, fp) {\r\n        return ({type: RESET, n: n, m: m, fp: fp})\r\n    },\r\n    restart() {\r\n        return ({type: RESTART})\r\n    },\r\n\r\n};\r\n\r\nlet store = {\r\n    _state: {\r\n        matchGame: {\r\n            vicCond: \"0\",\r\n            fPlayer: \"0\",\r\n            currentPlayer: \"0\",\r\n            initN: \"25\",\r\n            initM: \"3\",\r\n            maxM:\"3\",\r\n            currentN: \"25\",\r\n            currentM: \"1\",\r\n            userN: \"0\",\r\n            aiN: \"0\",\r\n        },\r\n    },\r\n    get state() {\r\n        return this._state;\r\n    },\r\n    _renderDOM() {\r\n    },\r\n    _initN(n) {\r\n        if (n % 2 == 0)\r\n            n = Number(n) + 1;\r\n        if (Number(n) < Number(this._state.matchGame.initM))\r\n            this._state.matchGame.initM = n;\r\n        this._state.matchGame.currentN = n;\r\n        this._state.matchGame.initN = n;\r\n        this._renderDOM(this._state);\r\n    },\r\n    _initM(m) {\r\n        if (Number(m) >= Number(this._state.matchGame.initN))\r\n            m = Number(this._state.matchGame.initN);\r\n        this._state.matchGame.initM = m;\r\n        this._state.matchGame.maxM = m;\r\n        this._renderDOM(this._state);\r\n    },\r\n    _setFP(fP) {\r\n        this._state.matchGame.fPlayer = fP;\r\n        this._state.matchGame.currentPlayer = fP;\r\n        this._renderDOM(this._state);\r\n    },\r\n    _reset(n, m, fp) {\r\n        this._state.matchGame.userN = 0;\r\n        this._state.matchGame.aiN = 0;\r\n        this._state.matchGame.currentM = m;\r\n        this._state.matchGame.currentN = n\r\n        this._state.matchGame.initM = m;\r\n        this._state.matchGame.maxM = m;\r\n        this._state.matchGame.initN = n;\r\n        this._state.matchGame.fPlayer = fp;\r\n        this._state.matchGame.currentPlayer = fp;\r\n        if(fp == 1){\r\n            this._aIMove();\r\n        }\r\n        this._renderDOM(this._state);\r\n    },\r\n    _restart() {\r\n        this._state.matchGame.userN = 0;\r\n        this._state.matchGame.aiN = 0;\r\n        this._state.matchGame.currentM = 0;\r\n        this._state.matchGame.currentN = 0;\r\n        this._state.matchGame.initM = 3;\r\n        this._state.matchGame.maxM = 3;\r\n        this._state.matchGame.initN = 25;\r\n        this._state.matchGame.fPlayer = 0;\r\n        this._state.matchGame.currentPlayer = 0;\r\n\r\n    },\r\n    _rebuild(){\r\n        this._renderDOM(this._state);\r\n    },\r\n    _changeM(newM) {\r\n        this._state.matchGame.currentM = newM;\r\n        // if (this._state.matchGame.initM > this._state.matchGame.currentN) {\r\n        //     this._state.matchGame.initM = this._state.matchGame.currentN;\r\n        //     this._state.matchGame.currentM = this._state.matchGame.currentN;\r\n        // }\r\n        this._renderDOM(this._state);\r\n    },\r\n    _takeM() {\r\n        this._state.matchGame.currentN = Number(this._state.matchGame.currentN) - Number(this._state.matchGame.currentM);\r\n        this._state.matchGame.userN = Number(this._state.matchGame.userN) + Number(this._state.matchGame.currentM);\r\n        this._state.matchGame.currentPlayer = 1;\r\n        if(this._state.matchGame.currentN <= this._state.matchGame.maxM){\r\n            this._state.matchGame.maxM = this._state.matchGame.currentN;\r\n            this._state.matchGame.currentM = this._state.matchGame.currentN;\r\n        }\r\n        //alert(\"N\" + this._state.matchGame.currentN + \"M\" + this._state.matchGame.maxM + \"m\" + this._state.matchGame.currentM)\r\n        this._renderDOM(this._state);\r\n        this._aIMove();\r\n    },\r\n    _aIMove() {\r\n        let aiM = 1;\r\n        setTimeout(() => {\r\n            if (this._state.matchGame.initM % 2 == 1) {\r\n                if (this._state.matchGame.fPlayer == 0) {\r\n                    for (let i = this._state.matchGame.currentN - 1; i > 1; i--) {\r\n                        if (i % 4 == 0 || i % 4 == 1) {\r\n                            let g = this._state.matchGame.currentN - i;\r\n                            if (g >= this._state.matchGame.initM)\r\n                                break;\r\n                            if ((g) % 2 == 1) {\r\n                                aiM = g;\r\n                                console.log(\"1\")\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (this._state.matchGame.fPlayer == 1) {\r\n                    if (this._state.matchGame.currentN < this.state.matchGame.initN) {\r\n                        for (let i = this._state.matchGame.currentN - 1; i > 1; i--) {\r\n                            if (i % 4 == 0 || i % 4 == 1) {\r\n                                let g = this._state.matchGame.currentN - i;\r\n                                if (g >= this._state.matchGame.initM)\r\n                                    break;\r\n                                if ((g) % 2 == 1) {\r\n                                    aiM = g;\r\n                                    console.log(\"2\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (this._state.matchGame.initM % 2 == 0) {\r\n                if (this._state.matchGame.aiN % 2 == 0) {\r\n                    for (let i = this._state.matchGame.currentN - 1; i > 1; i--) {\r\n                        if (i % 6 == 0 || i % 6 == 1) {\r\n                            let g = this._state.matchGame.currentN - i;\r\n                            if (g >= this._state.matchGame.initM)\r\n                                break;\r\n                            aiM = g;\r\n                            console.log(\"3\")\r\n                        }\r\n                    }\r\n                } else if (this._state.matchGame.aiN % 2 == 1) {\r\n                    for (let i = this._state.matchGame.currentN - 1; i > 1; i--) {\r\n                        if (i % 6 == 5) {\r\n                            let g = this._state.matchGame.currentN - i;\r\n                            if (g >= this._state.matchGame.initM)\r\n                                break;\r\n                            aiM = g;\r\n                            console.log(\"4\")\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            if (this._state.matchGame.currentN != 0) {\r\n                this._state.matchGame.currentN -= aiM;\r\n                if (this._state.matchGame.currentN <= this._state.matchGame.maxM) {\r\n                    this._state.matchGame.maxM = this._state.matchGame.currentN;\r\n                    this._state.matchGame.currentM = this._state.matchGame.currentN;\r\n                }\r\n                this._state.matchGame.aiN = Number(this._state.matchGame.aiN) + Number(aiM);\r\n                this._state.matchGame.currentPlayer = 0;\r\n                this._renderDOM(this._state);\r\n            }\r\n        }, 1500)\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === CHANGE_M) {\r\n            this._changeM(action.newM);\r\n        } else if (action.type === TAKE_M) {\r\n            this._takeM();\r\n        } else if (action.type === INIT_N) {\r\n            this._initN(action.n);\r\n        } else if (action.type === INIT_M) {\r\n            this._initM(action.m);\r\n        } else if (action.type === SET_FPLAYER) {\r\n            this._setFP(action.fPlayer);\r\n        } else if (action.type === RESET) {\r\n            this._reset(action.n, action.m, action.fp);\r\n        } else if (action.type === RESTART) {\r\n            this._restart();\r\n        } else if (action.type === REBUILD) {\r\n            this._rebuild();\r\n        }\r\n    },\r\n    subscribe(observer) {\r\n        this._renderDOM = observer;\r\n    },\r\n\r\n};\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\MatchGame.jsx",["60","61","62","63","64","65"],"import s from \"./MatchGame.module.css\"\r\nimport * as React from \"react\";\r\nimport {AC} from \"../../redux/state\";\r\nimport LinkButton from './LinkButton'\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\n\r\nconst MatchGame = (props) => {\r\n\r\n    let newM = React.createRef();\r\n    let changeM = () => {\r\n        let m = newM.current.value\r\n        props.dispatch(AC.changeMAC(m));\r\n    }\r\n    let takeM = () => {\r\n        //let m = newM.current.value\r\n        props.dispatch(AC.takeMAC());\r\n    }\r\n    let mover = () => {\r\n        if(props.mG.currentPlayer == 0)\r\n            return(\"USER\");\r\n        if(props.mG.currentPlayer == 1)\r\n            return(\"COMP\");\r\n    }\r\n    let moverBlocker = () => {\r\n        if(props.mG.currentPlayer == 0)\r\n            return(false);\r\n        if(props.mG.currentPlayer == 1)\r\n            return(true);\r\n    }\r\n    let restart = () => {\r\n        props.dispatch(AC.restart());\r\n    }\r\n    if(props.mG.currentN == 0) return <Redirect to=\"/victory\" />\r\n\r\n    return (\r\n        <main  className={s.content}>\r\n            <div className={s.moveOf}>\r\n                MOVE OF: <span className={s.mover}>{mover()}</span>\r\n            </div>\r\n\r\n            <div className={s.score}>\r\n                <div>\r\n                    <span>User</span>\r\n                    <span>{props.mG.userN}</span>\r\n                </div>\r\n                <div>\r\n                    <span>Matches</span>\r\n                    <span>{props.mG.currentN}</span>\r\n                </div>\r\n                <div>\r\n                    <span>Computer</span>\r\n                    <span>{props.mG.aiN}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.userM}>\r\n                <div className={s.stack}>\r\n                    <p>Matches in stuck:{props.mG.currentM}</p>\r\n                    <input type=\"range\" min=\"1\" max={props.mG.maxM} value={props.mG.currentM} onChange={changeM}\r\n                           ref={newM} className={s.slider}/>\r\n                </div>\r\n                <div className={s.buttons}>\r\n                    <button disabled={moverBlocker()} onClick={takeM}>TAKE IT</button>\r\n                </div>\r\n                <div className={s.buttons}>\r\n                    <LinkButton cP={props.mG.currentPlayer} onClick={restart}to='/init'> &#x21ba;RESTART</LinkButton>\r\n                </div>\r\n\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default MatchGame;","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\InitGame.jsx",["66"],"import s from \"./InitGame.module.css\"\r\nimport * as React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AC} from \"../../redux/state\";\r\n\r\n\r\nconst InitGame = (props) => {\r\n    let newN = React.createRef();\r\n    let newM = React.createRef();\r\n    let fPlayer = React.createRef();\r\n    let vicCond = React.createRef();\r\n    let setInitN = () => {\r\n        props.dispatch(AC.setInitNAC(newN.current.value));\r\n    }\r\n    let setInitM = () => {\r\n        props.dispatch(AC.setInitMAC(newM.current.value));\r\n    }\r\n    let setFPlayer = () => {\r\n        props.dispatch(AC.setFPlayer(fPlayer.current.value));\r\n    }\r\n    let reset = () => {\r\n        props.dispatch(AC.reset(newN.current.value,newM.current.value,fPlayer.current.value));\r\n    }\r\n\r\n\r\n    return (\r\n        <main className={s.content}>\r\n            <div className={s.triangle}></div>\r\n            <div className={s.gameText}>\r\n                <p>MATCH GAME </p>\r\n                Number of matches: <br/>\r\n                <input type=\"number\" step=\"2\" min=\"3\" value={props.mG.initN} onChange={setInitN} ref={newN}/>\r\n                <br/>\r\n                Max stack: <br/>\r\n                <input type=\"number\" min=\"2\" max={props.mG.initN} value={props.mG.initM} onChange={setInitM}\r\n                       ref={newM}/>\r\n                <br/>\r\n                First move: <br/>\r\n                User\r\n                <input type=\"range\" min=\"0\" max=\"1\" value={props.mG.fPlayer} onChange={setFPlayer}\r\n                       ref={fPlayer} className={s.slider}/>\r\n                Computer<br/>\r\n                <p><NavLink onClick={reset} to={\"/matchGame\"}>PLAY</NavLink></p>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default InitGame;","C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\LinkButton.jsx",[],"C:\\ADMINUS\\Stormotion\\stormotion_test_project\\src\\components\\MatchGame\\Victory.jsx",["67","68"],"import s from \"./Victory.module.css\"\r\nimport * as React from \"react\";\r\nimport {AC} from \"../../redux/state\";\r\nimport LinkButton from \"./LinkButton\";\r\n\r\n\r\nconst Victory = (props) => {\r\n\r\n    let restart = () => {\r\n        props.dispatch(AC.restart());\r\n    }\r\n    let checkWin = () => {\r\n        if(props.mG.aiN %2 == 0)\r\n            return(\"COMPUTER\")\r\n        if(props.mG.userN %2 == 0)\r\n            return(\"USER\")\r\n    }\r\n    return (\r\n        <main className={s.content}>\r\n            <div className={s.winner}>\r\n                WINNER &#128293;S {checkWin()}\r\n            </div>\r\n            <div className={s.score}>\r\n                <div>\r\n                    <span>User</span>\r\n                    <span>{props.mG.userN}</span>\r\n                </div>\r\n                <div className={s.buttons}>\r\n                    <LinkButton onClick={restart}to='/init'> &#x21ba;RESTART</LinkButton>\r\n                </div>\r\n                <div>\r\n                    <span>Computer</span>\r\n                    <span>{props.mG.aiN}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </main>\r\n    );\r\n}\r\nexport default Victory;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":7,"nodeType":"75","messageId":"76","endLine":3,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":56,"column":19,"nodeType":"79","messageId":"80","endLine":56,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":86,"column":15,"nodeType":"79","messageId":"80","endLine":86,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":129,"column":49,"nodeType":"79","messageId":"80","endLine":129,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":130,"column":51,"nodeType":"79","messageId":"80","endLine":130,"endColumn":53},{"ruleId":"77","severity":1,"message":"78","line":132,"column":35,"nodeType":"79","messageId":"80","endLine":132,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":132,"column":49,"nodeType":"79","messageId":"80","endLine":132,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":136,"column":41,"nodeType":"79","messageId":"80","endLine":136,"endColumn":43},{"ruleId":"77","severity":1,"message":"78","line":142,"column":58,"nodeType":"79","messageId":"80","endLine":142,"endColumn":60},{"ruleId":"77","severity":1,"message":"78","line":145,"column":39,"nodeType":"79","messageId":"80","endLine":145,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":145,"column":53,"nodeType":"79","messageId":"80","endLine":145,"endColumn":55},{"ruleId":"77","severity":1,"message":"78","line":149,"column":45,"nodeType":"79","messageId":"80","endLine":149,"endColumn":47},{"ruleId":"77","severity":1,"message":"78","line":157,"column":56,"nodeType":"79","messageId":"80","endLine":157,"endColumn":58},{"ruleId":"77","severity":1,"message":"78","line":158,"column":51,"nodeType":"79","messageId":"80","endLine":158,"endColumn":53},{"ruleId":"77","severity":1,"message":"78","line":160,"column":35,"nodeType":"79","messageId":"80","endLine":160,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":160,"column":49,"nodeType":"79","messageId":"80","endLine":160,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":168,"column":58,"nodeType":"79","messageId":"80","endLine":168,"endColumn":60},{"ruleId":"77","severity":1,"message":"78","line":170,"column":35,"nodeType":"79","messageId":"80","endLine":170,"endColumn":37},{"ruleId":"77","severity":1,"message":"81","line":181,"column":48,"nodeType":"79","messageId":"80","endLine":181,"endColumn":50},{"ruleId":"77","severity":1,"message":"78","line":21,"column":35,"nodeType":"79","messageId":"80","endLine":21,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":23,"column":35,"nodeType":"79","messageId":"80","endLine":23,"endColumn":37},{"ruleId":"73","severity":1,"message":"82","line":26,"column":9,"nodeType":"75","messageId":"76","endLine":26,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":27,"column":35,"nodeType":"79","messageId":"80","endLine":27,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":29,"column":35,"nodeType":"79","messageId":"80","endLine":29,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":35,"column":26,"nodeType":"79","messageId":"80","endLine":35,"endColumn":28},{"ruleId":"73","severity":1,"message":"83","line":11,"column":9,"nodeType":"75","messageId":"76","endLine":11,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":13,"column":28,"nodeType":"79","messageId":"80","endLine":13,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":15,"column":30,"nodeType":"79","messageId":"80","endLine":15,"endColumn":32},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'INIT_GAME' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'moverBlocker' is assigned a value but never used.","'vicCond' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]